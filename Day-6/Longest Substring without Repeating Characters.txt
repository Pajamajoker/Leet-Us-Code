class Solution {
public:
    int lengthOfLongestSubstring(string s) {
        
        unordered_map<char,int> subString;
        int maxLen = 0;
        int high=0,low=0;
        if(s.length() == 0) return 0;
        while(high <s.length() && low < s.length() && low<=high)
        {
            if(subString.find(s[high]) == subString.end())
            {
                subString[s[high]]++;
                high++;
            }
            else
            {
                while(subString.find(s[high]) != subString.end())
                {
                    subString.erase(s[low]);
                    low++;
                }
            }
            int subStringSize = subString.size();
            maxLen = max(maxLen, subStringSize);
        }
        
        return maxLen;
    }
};

//ss [a] 

//au
//lh